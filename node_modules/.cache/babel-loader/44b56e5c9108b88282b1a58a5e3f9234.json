{"ast":null,"code":"'use strict';\n\nvar _slicedToArray = require(\"/Users/eren_kafadar/Documents/eren_kafadar/LAB/per_rf/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _toConsumableArray = require(\"/Users/eren_kafadar/Documents/eren_kafadar/LAB/per_rf/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar strictUriEncode = require('strict-uri-encode');\n\nvar decodeComponent = require('decode-uri-component');\n\nvar splitOnFirst = require('split-on-first');\n\nfunction encoderForArrayFormat(options) {\n  switch (options.arrayFormat) {\n    case 'index':\n      return function (key) {\n        return function (result, value) {\n          var index = result.length;\n\n          if (value === undefined) {\n            return result;\n          }\n\n          if (value === null) {\n            return [].concat(_toConsumableArray(result), [[encode(key, options), '[', index, ']'].join('')]);\n          }\n\n          return [].concat(_toConsumableArray(result), [[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')]);\n        };\n      };\n\n    case 'bracket':\n      return function (key) {\n        return function (result, value) {\n          if (value === undefined) {\n            return result;\n          }\n\n          if (value === null) {\n            return [].concat(_toConsumableArray(result), [[encode(key, options), '[]'].join('')]);\n          }\n\n          return [].concat(_toConsumableArray(result), [[encode(key, options), '[]=', encode(value, options)].join('')]);\n        };\n      };\n\n    case 'comma':\n      return function (key) {\n        return function (result, value, index) {\n          if (value === null || value === undefined || value.length === 0) {\n            return result;\n          }\n\n          if (index === 0) {\n            return [[encode(key, options), '=', encode(value, options)].join('')];\n          }\n\n          return [[result, encode(value, options)].join(',')];\n        };\n      };\n\n    default:\n      return function (key) {\n        return function (result, value) {\n          if (value === undefined) {\n            return result;\n          }\n\n          if (value === null) {\n            return [].concat(_toConsumableArray(result), [encode(key, options)]);\n          }\n\n          return [].concat(_toConsumableArray(result), [[encode(key, options), '=', encode(value, options)].join('')]);\n        };\n      };\n  }\n}\n\nfunction parserForArrayFormat(options) {\n  var result;\n\n  switch (options.arrayFormat) {\n    case 'index':\n      return function (key, value, accumulator) {\n        result = /\\[(\\d*)\\]$/.exec(key);\n        key = key.replace(/\\[\\d*\\]$/, '');\n\n        if (!result) {\n          accumulator[key] = value;\n          return;\n        }\n\n        if (accumulator[key] === undefined) {\n          accumulator[key] = {};\n        }\n\n        accumulator[key][result[1]] = value;\n      };\n\n    case 'bracket':\n      return function (key, value, accumulator) {\n        result = /(\\[\\])$/.exec(key);\n        key = key.replace(/\\[\\]$/, '');\n\n        if (!result) {\n          accumulator[key] = value;\n          return;\n        }\n\n        if (accumulator[key] === undefined) {\n          accumulator[key] = [value];\n          return;\n        }\n\n        accumulator[key] = [].concat(accumulator[key], value);\n      };\n\n    case 'comma':\n      return function (key, value, accumulator) {\n        var isArray = typeof value === 'string' && value.split('').indexOf(',') > -1;\n        var newValue = isArray ? value.split(',') : value;\n        accumulator[key] = newValue;\n      };\n\n    default:\n      return function (key, value, accumulator) {\n        if (accumulator[key] === undefined) {\n          accumulator[key] = value;\n          return;\n        }\n\n        accumulator[key] = [].concat(accumulator[key], value);\n      };\n  }\n}\n\nfunction encode(value, options) {\n  if (options.encode) {\n    return options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n  }\n\n  return value;\n}\n\nfunction decode(value, options) {\n  if (options.decode) {\n    return decodeComponent(value);\n  }\n\n  return value;\n}\n\nfunction keysSorter(input) {\n  if (Array.isArray(input)) {\n    return input.sort();\n  }\n\n  if (typeof input === 'object') {\n    return keysSorter(Object.keys(input)).sort(function (a, b) {\n      return Number(a) - Number(b);\n    }).map(function (key) {\n      return input[key];\n    });\n  }\n\n  return input;\n}\n\nfunction removeHash(input) {\n  var hashStart = input.indexOf('#');\n\n  if (hashStart !== -1) {\n    input = input.slice(0, hashStart);\n  }\n\n  return input;\n}\n\nfunction extract(input) {\n  input = removeHash(input);\n  var queryStart = input.indexOf('?');\n\n  if (queryStart === -1) {\n    return '';\n  }\n\n  return input.slice(queryStart + 1);\n}\n\nfunction parse(input, options) {\n  options = Object.assign({\n    decode: true,\n    sort: true,\n    arrayFormat: 'none',\n    parseNumbers: false,\n    parseBooleans: false\n  }, options);\n  var formatter = parserForArrayFormat(options); // Create an object with no prototype\n\n  var ret = Object.create(null);\n\n  if (typeof input !== 'string') {\n    return ret;\n  }\n\n  input = input.trim().replace(/^[?#&]/, '');\n\n  if (!input) {\n    return ret;\n  }\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = input.split('&')[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var param = _step.value;\n\n      var _splitOnFirst = splitOnFirst(param.replace(/\\+/g, ' '), '='),\n          _splitOnFirst2 = _slicedToArray(_splitOnFirst, 2),\n          key = _splitOnFirst2[0],\n          value = _splitOnFirst2[1]; // Missing `=` should be `null`:\n      // http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\n\n      value = value === undefined ? null : decode(value, options);\n\n      if (options.parseNumbers && !Number.isNaN(Number(value)) && typeof value === 'string' && value.trim() !== '') {\n        value = Number(value);\n      } else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n        value = value.toLowerCase() === 'true';\n      }\n\n      formatter(decode(key, options), value, ret);\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  if (options.sort === false) {\n    return ret;\n  }\n\n  return (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce(function (result, key) {\n    var value = ret[key];\n\n    if (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n      // Sort object keys, not values\n      result[key] = keysSorter(value);\n    } else {\n      result[key] = value;\n    }\n\n    return result;\n  }, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = function (object, options) {\n  if (!object) {\n    return '';\n  }\n\n  options = Object.assign({\n    encode: true,\n    strict: true,\n    arrayFormat: 'none'\n  }, options);\n  var formatter = encoderForArrayFormat(options);\n  var keys = Object.keys(object);\n\n  if (options.sort !== false) {\n    keys.sort(options.sort);\n  }\n\n  return keys.map(function (key) {\n    var value = object[key];\n\n    if (value === undefined) {\n      return '';\n    }\n\n    if (value === null) {\n      return encode(key, options);\n    }\n\n    if (Array.isArray(value)) {\n      return value.reduce(formatter(key), []).join('&');\n    }\n\n    return encode(key, options) + '=' + encode(value, options);\n  }).filter(function (x) {\n    return x.length > 0;\n  }).join('&');\n};\n\nexports.parseUrl = function (input, options) {\n  return {\n    url: removeHash(input).split('?')[0] || '',\n    query: parse(extract(input), options)\n  };\n};","map":{"version":3,"sources":["/Users/eren_kafadar/Documents/eren_kafadar/LAB/per_rf/node_modules/query-string/index.js"],"names":["strictUriEncode","require","decodeComponent","splitOnFirst","encoderForArrayFormat","options","arrayFormat","key","result","value","index","length","undefined","encode","join","parserForArrayFormat","accumulator","exec","replace","concat","isArray","split","indexOf","newValue","strict","encodeURIComponent","decode","keysSorter","input","Array","sort","Object","keys","a","b","Number","map","removeHash","hashStart","slice","extract","queryStart","parse","assign","parseNumbers","parseBooleans","formatter","ret","create","trim","param","isNaN","toLowerCase","reduce","Boolean","exports","stringify","object","filter","x","parseUrl","url","query"],"mappings":"AAAA;;;;;;AACA,IAAMA,eAAe,GAAGC,OAAO,CAAC,mBAAD,CAA/B;;AACA,IAAMC,eAAe,GAAGD,OAAO,CAAC,sBAAD,CAA/B;;AACA,IAAME,YAAY,GAAGF,OAAO,CAAC,gBAAD,CAA5B;;AAEA,SAASG,qBAAT,CAA+BC,OAA/B,EAAwC;AACvC,UAAQA,OAAO,CAACC,WAAhB;AACC,SAAK,OAAL;AACC,aAAO,UAAAC,GAAG;AAAA,eAAI,UAACC,MAAD,EAASC,KAAT,EAAmB;AAChC,cAAMC,KAAK,GAAGF,MAAM,CAACG,MAArB;;AACA,cAAIF,KAAK,KAAKG,SAAd,EAAyB;AACxB,mBAAOJ,MAAP;AACA;;AAED,cAAIC,KAAK,KAAK,IAAd,EAAoB;AACnB,gDAAWD,MAAX,IAAmB,CAACK,MAAM,CAACN,GAAD,EAAMF,OAAN,CAAP,EAAuB,GAAvB,EAA4BK,KAA5B,EAAmC,GAAnC,EAAwCI,IAAxC,CAA6C,EAA7C,CAAnB;AACA;;AAED,8CACIN,MADJ,IAEC,CAACK,MAAM,CAACN,GAAD,EAAMF,OAAN,CAAP,EAAuB,GAAvB,EAA4BQ,MAAM,CAACH,KAAD,EAAQL,OAAR,CAAlC,EAAoD,IAApD,EAA0DQ,MAAM,CAACJ,KAAD,EAAQJ,OAAR,CAAhE,EAAkFS,IAAlF,CAAuF,EAAvF,CAFD;AAIA,SAdS;AAAA,OAAV;;AAgBD,SAAK,SAAL;AACC,aAAO,UAAAP,GAAG;AAAA,eAAI,UAACC,MAAD,EAASC,KAAT,EAAmB;AAChC,cAAIA,KAAK,KAAKG,SAAd,EAAyB;AACxB,mBAAOJ,MAAP;AACA;;AAED,cAAIC,KAAK,KAAK,IAAd,EAAoB;AACnB,gDAAWD,MAAX,IAAmB,CAACK,MAAM,CAACN,GAAD,EAAMF,OAAN,CAAP,EAAuB,IAAvB,EAA6BS,IAA7B,CAAkC,EAAlC,CAAnB;AACA;;AAED,8CAAWN,MAAX,IAAmB,CAACK,MAAM,CAACN,GAAD,EAAMF,OAAN,CAAP,EAAuB,KAAvB,EAA8BQ,MAAM,CAACJ,KAAD,EAAQJ,OAAR,CAApC,EAAsDS,IAAtD,CAA2D,EAA3D,CAAnB;AACA,SAVS;AAAA,OAAV;;AAYD,SAAK,OAAL;AACC,aAAO,UAAAP,GAAG;AAAA,eAAI,UAACC,MAAD,EAASC,KAAT,EAAgBC,KAAhB,EAA0B;AACvC,cAAID,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAKG,SAA5B,IAAyCH,KAAK,CAACE,MAAN,KAAiB,CAA9D,EAAiE;AAChE,mBAAOH,MAAP;AACA;;AAED,cAAIE,KAAK,KAAK,CAAd,EAAiB;AAChB,mBAAO,CAAC,CAACG,MAAM,CAACN,GAAD,EAAMF,OAAN,CAAP,EAAuB,GAAvB,EAA4BQ,MAAM,CAACJ,KAAD,EAAQJ,OAAR,CAAlC,EAAoDS,IAApD,CAAyD,EAAzD,CAAD,CAAP;AACA;;AAED,iBAAO,CAAC,CAACN,MAAD,EAASK,MAAM,CAACJ,KAAD,EAAQJ,OAAR,CAAf,EAAiCS,IAAjC,CAAsC,GAAtC,CAAD,CAAP;AACA,SAVS;AAAA,OAAV;;AAYD;AACC,aAAO,UAAAP,GAAG;AAAA,eAAI,UAACC,MAAD,EAASC,KAAT,EAAmB;AAChC,cAAIA,KAAK,KAAKG,SAAd,EAAyB;AACxB,mBAAOJ,MAAP;AACA;;AAED,cAAIC,KAAK,KAAK,IAAd,EAAoB;AACnB,gDAAWD,MAAX,IAAmBK,MAAM,CAACN,GAAD,EAAMF,OAAN,CAAzB;AACA;;AAED,8CAAWG,MAAX,IAAmB,CAACK,MAAM,CAACN,GAAD,EAAMF,OAAN,CAAP,EAAuB,GAAvB,EAA4BQ,MAAM,CAACJ,KAAD,EAAQJ,OAAR,CAAlC,EAAoDS,IAApD,CAAyD,EAAzD,CAAnB;AACA,SAVS;AAAA,OAAV;AA7CF;AAyDA;;AAED,SAASC,oBAAT,CAA8BV,OAA9B,EAAuC;AACtC,MAAIG,MAAJ;;AAEA,UAAQH,OAAO,CAACC,WAAhB;AACC,SAAK,OAAL;AACC,aAAO,UAACC,GAAD,EAAME,KAAN,EAAaO,WAAb,EAA6B;AACnCR,QAAAA,MAAM,GAAG,aAAaS,IAAb,CAAkBV,GAAlB,CAAT;AAEAA,QAAAA,GAAG,GAAGA,GAAG,CAACW,OAAJ,CAAY,UAAZ,EAAwB,EAAxB,CAAN;;AAEA,YAAI,CAACV,MAAL,EAAa;AACZQ,UAAAA,WAAW,CAACT,GAAD,CAAX,GAAmBE,KAAnB;AACA;AACA;;AAED,YAAIO,WAAW,CAACT,GAAD,CAAX,KAAqBK,SAAzB,EAAoC;AACnCI,UAAAA,WAAW,CAACT,GAAD,CAAX,GAAmB,EAAnB;AACA;;AAEDS,QAAAA,WAAW,CAACT,GAAD,CAAX,CAAiBC,MAAM,CAAC,CAAD,CAAvB,IAA8BC,KAA9B;AACA,OAfD;;AAiBD,SAAK,SAAL;AACC,aAAO,UAACF,GAAD,EAAME,KAAN,EAAaO,WAAb,EAA6B;AACnCR,QAAAA,MAAM,GAAG,UAAUS,IAAV,CAAeV,GAAf,CAAT;AACAA,QAAAA,GAAG,GAAGA,GAAG,CAACW,OAAJ,CAAY,OAAZ,EAAqB,EAArB,CAAN;;AAEA,YAAI,CAACV,MAAL,EAAa;AACZQ,UAAAA,WAAW,CAACT,GAAD,CAAX,GAAmBE,KAAnB;AACA;AACA;;AAED,YAAIO,WAAW,CAACT,GAAD,CAAX,KAAqBK,SAAzB,EAAoC;AACnCI,UAAAA,WAAW,CAACT,GAAD,CAAX,GAAmB,CAACE,KAAD,CAAnB;AACA;AACA;;AAEDO,QAAAA,WAAW,CAACT,GAAD,CAAX,GAAmB,GAAGY,MAAH,CAAUH,WAAW,CAACT,GAAD,CAArB,EAA4BE,KAA5B,CAAnB;AACA,OAfD;;AAiBD,SAAK,OAAL;AACC,aAAO,UAACF,GAAD,EAAME,KAAN,EAAaO,WAAb,EAA6B;AACnC,YAAMI,OAAO,GAAG,OAAOX,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,CAACY,KAAN,CAAY,EAAZ,EAAgBC,OAAhB,CAAwB,GAAxB,IAA+B,CAAC,CAA7E;AACA,YAAMC,QAAQ,GAAGH,OAAO,GAAGX,KAAK,CAACY,KAAN,CAAY,GAAZ,CAAH,GAAsBZ,KAA9C;AACAO,QAAAA,WAAW,CAACT,GAAD,CAAX,GAAmBgB,QAAnB;AACA,OAJD;;AAMD;AACC,aAAO,UAAChB,GAAD,EAAME,KAAN,EAAaO,WAAb,EAA6B;AACnC,YAAIA,WAAW,CAACT,GAAD,CAAX,KAAqBK,SAAzB,EAAoC;AACnCI,UAAAA,WAAW,CAACT,GAAD,CAAX,GAAmBE,KAAnB;AACA;AACA;;AAEDO,QAAAA,WAAW,CAACT,GAAD,CAAX,GAAmB,GAAGY,MAAH,CAAUH,WAAW,CAACT,GAAD,CAArB,EAA4BE,KAA5B,CAAnB;AACA,OAPD;AA7CF;AAsDA;;AAED,SAASI,MAAT,CAAgBJ,KAAhB,EAAuBJ,OAAvB,EAAgC;AAC/B,MAAIA,OAAO,CAACQ,MAAZ,EAAoB;AACnB,WAAOR,OAAO,CAACmB,MAAR,GAAiBxB,eAAe,CAACS,KAAD,CAAhC,GAA0CgB,kBAAkB,CAAChB,KAAD,CAAnE;AACA;;AAED,SAAOA,KAAP;AACA;;AAED,SAASiB,MAAT,CAAgBjB,KAAhB,EAAuBJ,OAAvB,EAAgC;AAC/B,MAAIA,OAAO,CAACqB,MAAZ,EAAoB;AACnB,WAAOxB,eAAe,CAACO,KAAD,CAAtB;AACA;;AAED,SAAOA,KAAP;AACA;;AAED,SAASkB,UAAT,CAAoBC,KAApB,EAA2B;AAC1B,MAAIC,KAAK,CAACT,OAAN,CAAcQ,KAAd,CAAJ,EAA0B;AACzB,WAAOA,KAAK,CAACE,IAAN,EAAP;AACA;;AAED,MAAI,OAAOF,KAAP,KAAiB,QAArB,EAA+B;AAC9B,WAAOD,UAAU,CAACI,MAAM,CAACC,IAAP,CAAYJ,KAAZ,CAAD,CAAV,CACLE,IADK,CACA,UAACG,CAAD,EAAIC,CAAJ;AAAA,aAAUC,MAAM,CAACF,CAAD,CAAN,GAAYE,MAAM,CAACD,CAAD,CAA5B;AAAA,KADA,EAELE,GAFK,CAED,UAAA7B,GAAG;AAAA,aAAIqB,KAAK,CAACrB,GAAD,CAAT;AAAA,KAFF,CAAP;AAGA;;AAED,SAAOqB,KAAP;AACA;;AAED,SAASS,UAAT,CAAoBT,KAApB,EAA2B;AAC1B,MAAMU,SAAS,GAAGV,KAAK,CAACN,OAAN,CAAc,GAAd,CAAlB;;AACA,MAAIgB,SAAS,KAAK,CAAC,CAAnB,EAAsB;AACrBV,IAAAA,KAAK,GAAGA,KAAK,CAACW,KAAN,CAAY,CAAZ,EAAeD,SAAf,CAAR;AACA;;AAED,SAAOV,KAAP;AACA;;AAED,SAASY,OAAT,CAAiBZ,KAAjB,EAAwB;AACvBA,EAAAA,KAAK,GAAGS,UAAU,CAACT,KAAD,CAAlB;AACA,MAAMa,UAAU,GAAGb,KAAK,CAACN,OAAN,CAAc,GAAd,CAAnB;;AACA,MAAImB,UAAU,KAAK,CAAC,CAApB,EAAuB;AACtB,WAAO,EAAP;AACA;;AAED,SAAOb,KAAK,CAACW,KAAN,CAAYE,UAAU,GAAG,CAAzB,CAAP;AACA;;AAED,SAASC,KAAT,CAAed,KAAf,EAAsBvB,OAAtB,EAA+B;AAC9BA,EAAAA,OAAO,GAAG0B,MAAM,CAACY,MAAP,CAAc;AACvBjB,IAAAA,MAAM,EAAE,IADe;AAEvBI,IAAAA,IAAI,EAAE,IAFiB;AAGvBxB,IAAAA,WAAW,EAAE,MAHU;AAIvBsC,IAAAA,YAAY,EAAE,KAJS;AAKvBC,IAAAA,aAAa,EAAE;AALQ,GAAd,EAMPxC,OANO,CAAV;AAQA,MAAMyC,SAAS,GAAG/B,oBAAoB,CAACV,OAAD,CAAtC,CAT8B,CAW9B;;AACA,MAAM0C,GAAG,GAAGhB,MAAM,CAACiB,MAAP,CAAc,IAAd,CAAZ;;AAEA,MAAI,OAAOpB,KAAP,KAAiB,QAArB,EAA+B;AAC9B,WAAOmB,GAAP;AACA;;AAEDnB,EAAAA,KAAK,GAAGA,KAAK,CAACqB,IAAN,GAAa/B,OAAb,CAAqB,QAArB,EAA+B,EAA/B,CAAR;;AAEA,MAAI,CAACU,KAAL,EAAY;AACX,WAAOmB,GAAP;AACA;;AAtB6B;AAAA;AAAA;;AAAA;AAwB9B,yBAAoBnB,KAAK,CAACP,KAAN,CAAY,GAAZ,CAApB,8HAAsC;AAAA,UAA3B6B,KAA2B;;AAAA,0BAClB/C,YAAY,CAAC+C,KAAK,CAAChC,OAAN,CAAc,KAAd,EAAqB,GAArB,CAAD,EAA4B,GAA5B,CADM;AAAA;AAAA,UAChCX,GADgC;AAAA,UAC3BE,KAD2B,sBAGrC;AACA;;;AACAA,MAAAA,KAAK,GAAGA,KAAK,KAAKG,SAAV,GAAsB,IAAtB,GAA6Bc,MAAM,CAACjB,KAAD,EAAQJ,OAAR,CAA3C;;AAEA,UAAIA,OAAO,CAACuC,YAAR,IAAwB,CAACT,MAAM,CAACgB,KAAP,CAAahB,MAAM,CAAC1B,KAAD,CAAnB,CAAzB,IAAyD,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,CAACwC,IAAN,OAAiB,EAA3G,EAAgH;AAC/GxC,QAAAA,KAAK,GAAG0B,MAAM,CAAC1B,KAAD,CAAd;AACA,OAFD,MAEO,IAAIJ,OAAO,CAACwC,aAAR,IAAyBpC,KAAK,KAAK,IAAnC,KAA4CA,KAAK,CAAC2C,WAAN,OAAwB,MAAxB,IAAkC3C,KAAK,CAAC2C,WAAN,OAAwB,OAAtG,CAAJ,EAAoH;AAC1H3C,QAAAA,KAAK,GAAGA,KAAK,CAAC2C,WAAN,OAAwB,MAAhC;AACA;;AAEDN,MAAAA,SAAS,CAACpB,MAAM,CAACnB,GAAD,EAAMF,OAAN,CAAP,EAAuBI,KAAvB,EAA8BsC,GAA9B,CAAT;AACA;AAtC6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAwC9B,MAAI1C,OAAO,CAACyB,IAAR,KAAiB,KAArB,EAA4B;AAC3B,WAAOiB,GAAP;AACA;;AAED,SAAO,CAAC1C,OAAO,CAACyB,IAAR,KAAiB,IAAjB,GAAwBC,MAAM,CAACC,IAAP,CAAYe,GAAZ,EAAiBjB,IAAjB,EAAxB,GAAkDC,MAAM,CAACC,IAAP,CAAYe,GAAZ,EAAiBjB,IAAjB,CAAsBzB,OAAO,CAACyB,IAA9B,CAAnD,EAAwFuB,MAAxF,CAA+F,UAAC7C,MAAD,EAASD,GAAT,EAAiB;AACtH,QAAME,KAAK,GAAGsC,GAAG,CAACxC,GAAD,CAAjB;;AACA,QAAI+C,OAAO,CAAC7C,KAAD,CAAP,IAAkB,OAAOA,KAAP,KAAiB,QAAnC,IAA+C,CAACoB,KAAK,CAACT,OAAN,CAAcX,KAAd,CAApD,EAA0E;AACzE;AACAD,MAAAA,MAAM,CAACD,GAAD,CAAN,GAAcoB,UAAU,CAAClB,KAAD,CAAxB;AACA,KAHD,MAGO;AACND,MAAAA,MAAM,CAACD,GAAD,CAAN,GAAcE,KAAd;AACA;;AAED,WAAOD,MAAP;AACA,GAVM,EAUJuB,MAAM,CAACiB,MAAP,CAAc,IAAd,CAVI,CAAP;AAWA;;AAEDO,OAAO,CAACf,OAAR,GAAkBA,OAAlB;AACAe,OAAO,CAACb,KAAR,GAAgBA,KAAhB;;AAEAa,OAAO,CAACC,SAAR,GAAoB,UAACC,MAAD,EAASpD,OAAT,EAAqB;AACxC,MAAI,CAACoD,MAAL,EAAa;AACZ,WAAO,EAAP;AACA;;AAEDpD,EAAAA,OAAO,GAAG0B,MAAM,CAACY,MAAP,CAAc;AACvB9B,IAAAA,MAAM,EAAE,IADe;AAEvBW,IAAAA,MAAM,EAAE,IAFe;AAGvBlB,IAAAA,WAAW,EAAE;AAHU,GAAd,EAIPD,OAJO,CAAV;AAMA,MAAMyC,SAAS,GAAG1C,qBAAqB,CAACC,OAAD,CAAvC;AACA,MAAM2B,IAAI,GAAGD,MAAM,CAACC,IAAP,CAAYyB,MAAZ,CAAb;;AAEA,MAAIpD,OAAO,CAACyB,IAAR,KAAiB,KAArB,EAA4B;AAC3BE,IAAAA,IAAI,CAACF,IAAL,CAAUzB,OAAO,CAACyB,IAAlB;AACA;;AAED,SAAOE,IAAI,CAACI,GAAL,CAAS,UAAA7B,GAAG,EAAI;AACtB,QAAME,KAAK,GAAGgD,MAAM,CAAClD,GAAD,CAApB;;AAEA,QAAIE,KAAK,KAAKG,SAAd,EAAyB;AACxB,aAAO,EAAP;AACA;;AAED,QAAIH,KAAK,KAAK,IAAd,EAAoB;AACnB,aAAOI,MAAM,CAACN,GAAD,EAAMF,OAAN,CAAb;AACA;;AAED,QAAIwB,KAAK,CAACT,OAAN,CAAcX,KAAd,CAAJ,EAA0B;AACzB,aAAOA,KAAK,CACV4C,MADK,CACEP,SAAS,CAACvC,GAAD,CADX,EACkB,EADlB,EAELO,IAFK,CAEA,GAFA,CAAP;AAGA;;AAED,WAAOD,MAAM,CAACN,GAAD,EAAMF,OAAN,CAAN,GAAuB,GAAvB,GAA6BQ,MAAM,CAACJ,KAAD,EAAQJ,OAAR,CAA1C;AACA,GAlBM,EAkBJqD,MAlBI,CAkBG,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAAChD,MAAF,GAAW,CAAf;AAAA,GAlBJ,EAkBsBG,IAlBtB,CAkB2B,GAlB3B,CAAP;AAmBA,CArCD;;AAuCAyC,OAAO,CAACK,QAAR,GAAmB,UAAChC,KAAD,EAAQvB,OAAR,EAAoB;AACtC,SAAO;AACNwD,IAAAA,GAAG,EAAExB,UAAU,CAACT,KAAD,CAAV,CAAkBP,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,KAAmC,EADlC;AAENyC,IAAAA,KAAK,EAAEpB,KAAK,CAACF,OAAO,CAACZ,KAAD,CAAR,EAAiBvB,OAAjB;AAFN,GAAP;AAIA,CALD","sourcesContent":["'use strict';\nconst strictUriEncode = require('strict-uri-encode');\nconst decodeComponent = require('decode-uri-component');\nconst splitOnFirst = require('split-on-first');\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\t\t\t\tif (value === undefined) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[', index, ']'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')\n\t\t\t\t];\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (value === undefined) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[]'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '[]=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'comma':\n\t\t\treturn key => (result, value, index) => {\n\t\t\t\tif (value === null || value === undefined || value.length === 0) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (index === 0) {\n\t\t\t\t\treturn [[encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(',')];\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (value === undefined) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, encode(key, options)];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'comma':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.split('').indexOf(',') > -1;\n\t\t\t\tconst newValue = isArray ? value.split(',') : value;\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nfunction parse(input, options) {\n\toptions = Object.assign({\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false\n\t}, options);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst ret = Object.create(null);\n\n\tif (typeof input !== 'string') {\n\t\treturn ret;\n\t}\n\n\tinput = input.trim().replace(/^[?#&]/, '');\n\n\tif (!input) {\n\t\treturn ret;\n\t}\n\n\tfor (const param of input.split('&')) {\n\t\tlet [key, value] = splitOnFirst(param.replace(/\\+/g, ' '), '=');\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : decode(value, options);\n\n\t\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\t\tvalue = Number(value);\n\t\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\t\tvalue = value.toLowerCase() === 'true';\n\t\t}\n\n\t\tformatter(decode(key, options), value, ret);\n\t}\n\n\tif (options.sort === false) {\n\t\treturn ret;\n\t}\n\n\treturn (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = ret[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = (object, options) => {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none'\n\t}, options);\n\n\tconst formatter = encoderForArrayFormat(options);\n\tconst keys = Object.keys(object);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n};\n\nexports.parseUrl = (input, options) => {\n\treturn {\n\t\turl: removeHash(input).split('?')[0] || '',\n\t\tquery: parse(extract(input), options)\n\t};\n};\n"]},"metadata":{},"sourceType":"script"}