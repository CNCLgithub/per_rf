{"version":3,"sources":["lib/aws_lambda.js","lib/utils.js","containers/LabJsWrapper.js","Routes.js","App.js","index.js"],"names":["https","require","querystring","config","aws_saveTaskData","encryptedMetadata","data","Promise","resolve","reject","postData","stringify","encrypted_metadata","postOptions","hostname","awsLambda","saveTaskData","host","port","path","method","headers","Buffer","byteLength","req","request","res","setEncoding","on","e","debug","console","log","write","end","aws_fetchLink","fetchLink","body","d","isLocalhost","Boolean","window","location","match","_","qs","questParamsToKeep","LabJsWrapper","props","params","parse","search","ignoreQueryPrefix","state","id","sendingData","link","undefined","surveyUrl","survey_url","isUndefined","addScript","process","labJsData","exportData","this","taskName","taskVersion","processLabJsData","JSON","processedData","push","length","finalData","quest","q1","pick","q2","that","addEventListener","event","type","parsedData","json","packageDataForExport","setState","then","src","callback","script","document","createElement","onreadystatechange","onload","head","appendChild","assign","className","data-labjs-section","style","visibility","Component","exact","component","App","Routes","history","createBrowserHistory","ReactDOM","render","basename","getElementById"],"mappings":"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","file":"static/js/main.199f6a43.chunk.js","sourcesContent":["var https = require('https');\nvar querystring = require('querystring');\nconst config = require('../config');\n\nexport function aws_saveTaskData(encryptedMetadata, data) {\n  return new Promise(function(resolve, reject) {\n    // Call api endpoint for update\n    const postData = querystring.stringify({\n        encrypted_metadata: encryptedMetadata,\n        data: data,\n    });\n\n    const postOptions = {\n      hostname: config.awsLambda.saveTaskData.host,\n      port: 443,\n      path: config.awsLambda.saveTaskData.path,\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'Content-Length': Buffer.byteLength(postData),\n      },\n    };\n\n    const req = https.request(postOptions, (res) => {\n      res.setEncoding('utf8');\n      res.on('data', () => {});\n      res.on('end', resolve);\n    });\n\n    req.on('error', (e) => {\n      if (config.debug) {\n        console.log(\"ERROR:\");\n        console.log(e);\n      }\n      reject(e);\n    });\n\n    req.write(postData);\n    req.end();\n  });\n}\n\n\nexport function aws_fetchLink(encryptedMetadata) {\n  return new Promise(function(resolve, reject) {\n    // Call api endpoint for update\n    const postData = querystring.stringify({\n        encrypted_metadata: encryptedMetadata,\n    });\n\n    const postOptions = {\n      hostname: config.awsLambda.fetchLink.host,\n      port: 443,\n      path: config.awsLambda.fetchLink.path,\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'Content-Length': Buffer.byteLength(postData),\n      },\n    };\n\n    const req = https.request(postOptions, (res) => {\n      res.setEncoding('utf8');\n      var body = '';\n      res.on('data', function(d) {\n          body += d;\n       });\n      res.on('end', () => resolve(body));\n    });\n\n    req.on('error', (e) => {\n      if (config.debug) {\n        console.log(\"ERROR:\");\n        console.log(e);\n      }\n      reject(e);\n    });\n\n    req.write(postData);\n    req.end();\n  });\n}\n","export const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n","import React, {Component} from 'react';\nimport {aws_saveTaskData, aws_fetchLink} from \"../lib/aws_lambda\";\nimport {isLocalhost} from \"../lib/utils\";\n\nimport '../lib/external/lab.css';\nimport './LabJsWrapper.css';\n\nconst config = require('../config');\nvar _ = require('lodash');\nvar qs = require('query-string');\n\n// Import questlib\nrequire('questlib');\n\nconst questParamsToKeep = [\n  'updatePdf',\n  'warnPdf',\n  'normalizePdf',\n  'tGuess',\n  'tGuessSd',\n  'pThreshold',\n  'xThreshold',\n  'beta',\n  'delta',\n  'gamma',\n  'grain',\n  'dim',\n  'quantileOrder',\n  'intensity',\n  'response',\n];\n\n\nclass LabJsWrapper extends Component {\n  constructor(props) {\n    super(props);\n\n    // Parse get params for encrypted metadata\n    const params = qs.parse(\n      this.props.location.search,\n      {ignoreQueryPrefix: true}\n    );\n\n    // Set init state\n    this.state = {\n      encryptedMetadata: params.id,\n      sendingData: false,\n      link: undefined,\n    };\n\n    this.surveyUrl = params.survey_url;\n\n    if (!_.isUndefined(this.state.encryptedMetadata)) {\n      this.addScript(process.env.PUBLIC_URL + '/external/lab.js', () => {\n        // If we add this script tag before lab.js loads, then the\n        // script will not be able to find the lab module.\n        this.addScript(process.env.PUBLIC_URL + '/script.js');\n      });\n    }\n  }\n\n  // labJsData should be parsed\n  packageDataForExport(labJsData) {\n    const exportData = {};\n\n    exportData.encrypted_metadata = this.state.encryptedMetadata;\n    exportData.taskName = config.taskName;\n    exportData.taskVersion = config.taskVersion;\n    exportData.data = this.processLabJsData(labJsData);\n\n    return JSON.stringify(exportData);\n  }\n\n  processLabJsData(labJsData) {\n    const processedData = [];\n\n    // Always keep entry 0 of labjs data since it contains useful metadata\n    processedData.push(labJsData[0]);\n\n    // The last frame contains all collected data\n    const data = labJsData[labJsData.length - 1].finalData;\n\n    // for q1 and q2, filter by parameters\n    data.quest.q1.params = _.pick(data.quest.q1.params, questParamsToKeep);\n    data.quest.q2.params = _.pick(data.quest.q2.params, questParamsToKeep);\n\n    processedData.push(data);\n\n    return processedData;\n  }\n\n  componentDidMount() {\n    var that = this;\n    window.addEventListener('message', function(event) {\n      if (event.data.type === 'labjs.data') {\n        const parsedData = JSON.parse(event.data.json);\n\n        // Print out debugging info if flag is set or we're on localhost\n        if (config.debug || isLocalhost) {\n          console.log(parsedData);\n          console.log(that.packageDataForExport(parsedData));\n        }\n\n        if (isLocalhost) {\n          if (that.surveyUrl) {\n            that.setState({link: that.surveyUrl});\n          }\n          return;\n        }\n\n        that.setState({sendingData: true});\n        aws_saveTaskData(that.state.encryptedMetadata, that.packageDataForExport(parsedData)).then(\n          () => {\n            if (that.surveyUrl) {\n              that.setState({link: that.surveyUrl});\n            } else {\n              aws_fetchLink(that.state.encryptedMetadata).then(\n                (link) => that.setState({link: link})\n              );\n            }\n          }\n        );\n      }\n    });\n\n  }\n\n  addScript(src, callback) {\n    const script = document.createElement(\"script\");\n    script.src = src;\n    script.type = \"module\";\n    script.onreadystatechange = callback;\n    script.onload = callback;\n\n    document.head.appendChild(script);\n  }\n\n  render() {\n    if (_.isUndefined(this.state.encryptedMetadata)) {\n      return (\n        <div>\n          <h2>Something went wrong. Please try again.</h2>\n        </div>\n      );\n    } else if (!_.isUndefined(this.state.link)) {\n      window.location.assign(this.state.link);\n    }\n\n    return (\n      <div>\n        <div className=\"container fullscreen\" data-labjs-section=\"main\" style={{visibility: this.state.sendingData ? 'hidden' : 'visible'}}>\n          <main className=\"content-vertical-center content-horizontal-center\">\n            <div>\n              <h2>Loading Experiment</h2>\n              <p>The experiment is loading and should start in a few seconds</p>\n            </div>\n          </main>\n        </div>\n        <div className=\"center\" style={{visibility: this.state.sendingData ? 'visible' : 'hidden'}}>\n          <h2>Saving data... do not exit window</h2>\n        </div>\n      </div>\n    );\n  } // end render\n} // end class\n\nexport default LabJsWrapper;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport LabJsWrapper from \"./containers/LabJsWrapper\";\n\n\nexport default () =>\n  <Switch>\n    <Route path=\"/\" exact component={LabJsWrapper} />\n\n        { /* Finally, catch all unmatched routes */ }\n        {/*  <Route component={NotFound} /> */}\n  </Switch>;\n","import React, { Component } from 'react';\nimport Routes from \"./Routes\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Routes />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Router } from \"react-router-dom\";\nimport { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n    <Router history={history} basename={process.env.PUBLIC_URL}>\n      <App />\n    </Router>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}